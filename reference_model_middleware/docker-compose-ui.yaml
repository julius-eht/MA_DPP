version: "3.9"
services:
  mongo:
    image: mongo:5.0.10
    # Provide mongo config
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongoAdmin
      MONGO_INITDB_ROOT_PASSWORD: mongoPassword
    # Set health checks to wait until mongo has started
    volumes:
    -  db:/data/db 
    healthcheck:
      test: mongo
      interval: 10s
      start_period: 5s
      retries: 5
    # Maps tcp port to host
    #ports:
    #  - 27017:27017
  aas-env:
    image: eclipsebasyx/aas-environment:2.0.0-SNAPSHOT-NOINDEX
    volumes:
      - ./aas-env.properties:/application/application.properties
    ports:
        - 8081:8081
    depends_on:
        mongo:
            condition: service_healthy
        
  aas-registry:
    image: eclipsebasyx/aas-registry-log-mongodb:2.0.0-SNAPSHOT
    container_name: aas-registry
    ports:
      - 8082:8080
    volumes:
      - ./aas-registry.yml:/workspace/config/application.yml
    depends_on:
      mongo:
        condition: service_healthy
    restart: always

  aas-web-ui_v2:
    image: eclipsebasyx/aas-gui:v2-231009
    container_name: aas-web-ui_v2
    ports:
      - "3100:3000"
    environment:
      VITE_REGISTRY_PATH: "http://localhost:8082"
      VITE_AAS_REPO_PATH: "http://localhost:8081/shells"
      VITE_SUBMODEL_REPO_PATH: "http://localhost:8081/submodels"
      VITE_CD_REPO_PATH: "http://localhost:8081/concept-descriptions"
    restart: always
  
  aas2openapi-middleware:
    build: 
      context: ../
      dockerfile: ./reference_model_middleware/Dockerfile
    ports:
      - 8000:8000
    environment:
      - AAS_SERVER_HOST=aas-env
      - AAS_SERVER_PORT=8081
      - SUBMODEL_SERVER_HOST=aas-env
      - SUBMODEL_SERVER_PORT=8081
    depends_on:
      - aas-env

volumes:
  db:
